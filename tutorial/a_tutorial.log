-- FreeFem++ v4.6 (Fri, Apr 03, 2020  2:08:08 PM - git v4.6)
 Load: lg_fem lg_mesh lg_mesh3 eigenvalue
    1 : // This test shows some powerful features of FreeFEM on a
    2 : // simple example: -\Delta(u) = 1 in the unit cercle with u=0 on the
    3 : // border of the unit cercle. This problem has an analytical solution
    4 : // u = (1-x^2-y^2)/4
    5 :
    6 : // Mesh
    7 : real pi = 4*atan(1);
 *** Warning  The identifier pi hide a Global identifier
 
    8 : border a(t=0, 2*pi){x=cos(t); y=sin(t); label=1;}
    9 :
   10 : mesh disk = buildmesh(a(50));
   11 : plot(disk);
   12 :
   13 : // Fespace
   14 : fespace femp1(disk, P1);
   15 : femp1 u, v;
   16 :
   17 : // Problem
   18 : problem laplace(u, v)
   19f : reeglut        =(ffglut.exe):  ifgPlatformInitialize: CreateDC failed, Screen size info may be incorrect
This is quite likely caused by a bad '-display' parameternt
2d(disk)(       // bilinear form
   20 :                   dx(u)*dx(v)
   21 :                 + dy(u)*dy(v)
   22 :         )
   23 :         + int2d(disk)(  // linear form
   24 :                 - 1*v
   25 :         )
   26 :         + on(1, u=0)    // boundary condition
   27 :         ;
   28 :
   29 : // Solve
   30 : laplace;
   31 :
   32 : // Error
   33 : femp1 err = u - (1-x^2-y^2)/4;
   34 :
   35 : // Plot
   36 : plot(u, value=true, wait=true);
   37 : plot(err, value=true, wait=true);
   38 :
   39 : // Display (on terminal)
   40 : cout << "error L2 = " << sqrt(int2d(disk)( (u-(1-x^2-y^2)/4)^2 )) << endl;
   41 : cout << "error H10 = " << sqrt(int2d(disk)((dx(u)+x/2)^2)
   42 :                                                          + int2d(disk)((dy(u)+y/2)^2) )<< endl;
   43 :
   44 : // Mesh adaptation
   45 : disk = adaptmesh(disk, u, err=0.01);
   46 : plot(disk, wait=1);
   47 :
   48 : // Solve
   49 : laplace;
   50 :
   51 : // Error
   52 : err =u-(1-x^2-y^2)/4;
   53 :
   54 : // Plot
   55 : plot(u, value=true, wait=true);
   56 : plot(err, value=true, wait=true);
   57 :
   58 : // Display
   59 : cout << "error L2 = " << sqrt(int2d(disk)( (u-(1-x^2-y^2)/4) ^2 )) << endl;
   60 : cout << "error H10 = " << sqrt(int2d(disk)((dx(u)+x/2)^2)
   61 :                                                          + int2d(disk)((dy(u)+y/2)^2)) << endl;
   62 :  sizestack + 1024 =3704  ( 2680 )
 
  --  mesh:  Nb of Triangles =    438, Nb of Vertices 245
  -- Solve :
          min 5.23612e-32  max 0.249031
error L2 = 0.00213342
error H10 = 0.0380491
  number of required edges : 0
  -- adaptmesh Regulary:  Nb triangles 1500 , h  min 0.0484672 , h max 0.107623
     area =  3.13903 , M area = 618.301 , M area/( |Khat| nt) 0.951937
     infiny-regularity:  min 0.444321  max 1.62694
     anisomax  2.67074, beta max = 1.36764 min  0.793559
  --  mesh:  Nb of Triangles =   1500, Nb of Vertices 796
  -- Solve :
          min 3.16436e-32  max 0.249951
error L2 = 0.00059249
error H10 = 0.019033
times: compile 0.051s, execution 1.922s,  mpirank:0
 CodeAlloc : nb ptr  3669,  size :480752 mpirank: 0
Ok: Normal End
 try getConsole C:\Program Files (x86)\FreeFem++\examples\tutorial\a_tutorial.edp
